import 'dart:io';
import 'dart:async';
import 'dart:convert';

import 'package:flutter/material.dart';
import 'package:flutter/foundation.dart';

import 'package:tdocumenterio/src/api/api.dart';

import 'package:tdocumenterio/src/models/lista_tramite.dart';
import 'package:tdocumenterio/src/pages/lista_tramite_detalle.dart';

import 'package:http/http.dart' as http;

import 'package:tdocumenterio/src/models/tramite.dart';

Future<List<Tramite>> fetchTramites(
    http.Client client, String nroExpediente) async {
  final _body = "Expediente=" + nroExpediente;
  final response = await client.post(
      "http://190.108.89.83/TramiteDocumentario2019/tramites/buscar_tramite_expediente/",
      body: _body,
      headers: {
        "Accept": "application/json",
        "Content-Type": "application/x-www-form-urlencoded"
      },
      encoding: Encoding.getByName("utf-8"));

  // Use the compute function to run parsePhotos in a separate isolate
  return compute(parseTramites, response.body);
}

// A function that converts a response body into a List<Photo>
List<Tramite> parseTramites(String responseBody) {
  final parsed = json.decode(responseBody).cast<Map<String, dynamic>>();

  return parsed.map<Tramite>((json) => Tramite.fromJson(json)).toList();
}

void main() => runApp(MyApp());

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'GORE CUSCO',
      theme: ThemeData(
        primarySwatch: Colors.red,
      ),
      home: MySplash(
          title:
              'Tramite Documentario'), //MyHomePage(title: 'Tramite Documentario'),
    );
  }
}

class MySplash extends StatefulWidget {
  MySplash({Key key, this.title}) : super(key: key);

  final String title;
  _MySplashState createState() => _MySplashState();
}

class _MySplashState extends State<MySplash> {
  @override
  void initState() {
    super.initState();
    Future.delayed(Duration(seconds: 3), () {
      Navigator.push(
          context,
          MaterialPageRoute(
            builder: (context) => MyHomePage(title: 'Tramite Documentario'),
          ));
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        backgroundColor: Color.fromRGBO(128, 22, 39, 1), //Color(0XFFFF0000),
        body: GestureDetector(
          child: Center(
            child: Column(
                mainAxisAlignment: MainAxisAlignment.center,
                children: <Widget>[
                  Image.asset("images/logo.png", height: 200.0),
                  Text('TRAMITE DOCUMENTARIO',
                      style: TextStyle(
                          fontSize: 20.0,
                          color: Colors.white,
                          fontWeight: FontWeight.bold)),
                ]),
          ),
          onTap: () {
            Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) =>
                      MyHomePage(title: 'Tramite Documentario'),
                ));
          },
        )

        /*Center(
      child:
        Column(
          mainAxisAlignment: MainAxisAlignment.center, 
          children: <Widget>[
            Image.asset("images/logo.png", height: 200.0),
            Text('TRAMITE DOCUMENTARIO'),
          ]
        ),
      )*/
        );
  }
}

class MyHomePage extends StatefulWidget {
  MyHomePage({Key key, this.title}) : super(key: key);

  final String title;

  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  //static List _buscarPor = ["NRO DE EXPEDIENTE", "NRO DE DOCUMENTO"];
  static List _buscarPor = ["NRO DE EXPEDIENTE"];
  List<DropdownMenuItem<String>> _dropDownMenuItems;
  String _selectedBuscar = _buscarPor[0];

  final _textNroExpedienteController = TextEditingController();

  final nroExpediente = "";

  @override
  void initState() {
    super.initState();

    // _textNroExpedienteController.addListener(() {});

    _dropDownMenuItems = buildAndGetDropDownMenuItems(_buscarPor);
  }

  _update() {
    setState(() {});
  }

  List<DropdownMenuItem<String>> buildAndGetDropDownMenuItems(List bucarPor) {
    List<DropdownMenuItem<String>> items = new List();
    for (String nro in bucarPor) {
      items.add(
        new DropdownMenuItem(value: nro, child: Text(nro)),
      );
    }
    return items;
  }

  void changedDropDownItem(String selectedDoc) {
    setState(() {
      _selectedBuscar = selectedDoc;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(widget.title),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.start,
          children: <Widget>[
            /*DropdownButton(
              value: _selectedBuscar,
              items: _dropDownMenuItems,
              onChanged: changedDropDownItem,
              style: Theme.of(context).textTheme.subtitle,
            ),
            Expanded(
              child: new Container(
                color: Colors.red,
                child: new Column(
                  mainAxisSize: MainAxisSize.min,
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: <Widget>[
                    Container(
                      color: Colors.blue,
                      height: 50.0,
                      width: 50.0,
                    ),
                    new Text(
                      'jbijbibbib',
                    ),
                    new Text(
                      'author',
                    ),
                  ],
                ),
              ),
            ),
            Container(
                padding: new EdgeInsets.all(0.7),
                margin: new EdgeInsets.all(4.0),
                decoration: BoxDecoration(
                  border: Border.all(width: 1, color: Colors.black45),
                  borderRadius: new BorderRadius.all(new Radius.circular(7.0)),
                ),
                child: DropdownButtonHideUnderline(
                  child: DropdownButton(
                    value: _selectedBuscar,
                    items: _dropDownMenuItems,
                    onChanged: changedDropDownItem,
                  ),
                )),*/
            Container(
              padding: new EdgeInsets.all(0.7),
              margin: new EdgeInsets.all(15.0),
              color: Colors.white,
              child: TextField(
                keyboardType: TextInputType.number,
                controller: _textNroExpedienteController,
                decoration: new InputDecoration(
                    border: new OutlineInputBorder(
                        borderSide: new BorderSide(color: Colors.teal)),
                    hintText: 'NRO EXPEDIENTE',
                    helperText: 'Ingresar el Nro. de expediente',
                    //labelText: 'DEPENDENCIA',
                    prefixIcon: const Icon(
                      Icons.search,
                      color: Colors.black,
                    ),
                    prefixText: ' '),
              ),
            ),
            Container(
                width: 150.0,
                height: 40.0,
                child: RaisedButton(
                  onPressed: () {
                    setState(() {
                      _update();
                    });
                  },
                  color: Color(0XFFFF0000),
                  child: Row(
                    children: <Widget>[
                      Expanded(
                        flex: 3, // 20%
                        child: Row(
                          children: <Widget>[
                            Icon(
                              Icons.search,
                              color: Colors.white,
                            ),
                            Text(
                              'BUSCAR',
                              style: TextStyle(color: Colors.white),
                            ),
                          ],
                        ),
                      ),
                      /*Text(
                        'Play this song',
                        style: TextStyle(color: Colors.white),
                      ),
                      Icon(
                        Icons.play_arrow,
                        color: Colors.white,
                      ),*/
                    ],
                  ),
                )),
            /*RaisedButton(
              onPressed: () {
                setState(() {
                  _update();
                });
              },
              color: Color(0XFFFF0000),
              child: Row(
                children: <Widget>[
                  Text(
                    'Play this song',
                    style: TextStyle(color: Colors.white),
                  ),
                  Icon(
                    Icons.play_arrow,
                    color: Colors.white,
                  ),
                ],
              ),
            ),
            IconButton(
              icon: Icon(Icons.search),
              onPressed: () {
                setState(() {
                  _update();
                });
              },
            ),*/
            Expanded(
              child: FutureBuilder<List<Tramite>>(
                future: fetchTramites(
                    http.Client(), _textNroExpedienteController.text),
                builder: (context, snapshot) {
                  if (snapshot.hasError) print(snapshot.error);

                  return snapshot.hasData
                      ? TramiteList(tramite: snapshot.data)

                      ///: Center(child: CircularProgressIndicator());
                      : Center(child: Text('PROBLEMAS CON INTERNET'));
                },
              ),
            ),
          ],
        ),
      ),
    );
  }
}

class TramiteList extends StatelessWidget {
  final List<Tramite> tramite;

  TramiteList({Key key, this.tramite}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Container(
       color: const Color(0xFF00FF00),
        child: ListView.builder(
      itemCount: tramite.length,
      itemBuilder: (context, index) {
        return ListTile(
            contentPadding:
                EdgeInsets.symmetric(horizontal: 10.0, vertical: 10.0),
            /*leading: Container(
              padding: EdgeInsets.only(right: 12.0),
              decoration: new BoxDecoration(
                  border: new Border(
                      right: new BorderSide(width: 1.0, color: Colors.red))),
              child: Icon(Icons.speaker_notes, color: Colors.blue),
            ),*/
            title: Text(
              tramite[index].nombreOrigen,
              style: TextStyle(color: Colors.red, fontWeight: FontWeight.bold),
            ),
            subtitle: Row(
              children: <Widget>[
                Icon(Icons.linear_scale, color: Colors.yellowAccent),
                Text(tramite[index].oficinaDestino,
                    style: TextStyle(color: Colors.red))
              ],
            ),
            //Text(tramite[index].oficinaDestino),
            onTap: () {
              Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => ListaTramiteDetallePage(
                          tramite[index].idTramiteDetalle)));
            },
            trailing: Icon(Icons.keyboard_arrow_right,
                color: Colors.red, size: 30.0));
      },
    ));
  }
}
